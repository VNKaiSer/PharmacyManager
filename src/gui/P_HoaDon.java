/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

import connectDB.ConnectDB;
import dao.HoaDon_DAO;


/**
 *
 * @author Asus
 */
public class P_HoaDon extends javax.swing.JFrame implements ActionListener {

	/**
	 * Creates new form ChiTietHD
	 */
	public P_HoaDon(String sdt) {
		initComponents(sdt);
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents(String sdt) {
		setTitle("Danh sách hóa đơn");
		setSize(500, 400);
		setLocationRelativeTo(null);
//		setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
		jScrollPane1 = new javax.swing.JScrollPane();
		tList = new javax.swing.JTable();
		lblTen = new javax.swing.JLabel();
		lblSDT = new javax.swing.JLabel();
		String[] iList = { "Tăng theo ngày thanh toán", "Giảm theo ngày thanh toán", "Tăng theo tiền mua",
				"Giảm theo tiền mua" };
		cbxModol = new DefaultComboBoxModel(iList);
		cbxSapXep = new javax.swing.JComboBox<>();
		lblSapXep = new javax.swing.JLabel();
		lblHienTen = new javax.swing.JLabel();
		lblHienSDT = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		lblTen.setText("Tên:");

		lblSDT.setText("Số điện thoại:");

		cbxSapXep.setModel(cbxModol);

		lblSapXep.setText("Sắp xếp");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout.createSequentialGroup().addContainerGap()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jScrollPane1)
												.addGroup(layout.createSequentialGroup()
														.addComponent(lblTen, javax.swing.GroupLayout.PREFERRED_SIZE,
																30, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGap(18, 18, 18)
														.addComponent(lblHienTen,
																javax.swing.GroupLayout.PREFERRED_SIZE, 193,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGap(18, 18, 18)
														.addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE,
																80, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(lblHienSDT, javax.swing.GroupLayout.DEFAULT_SIZE,
																183, Short.MAX_VALUE)
														.addGap(18, 18, 18)
														.addComponent(lblSapXep, javax.swing.GroupLayout.PREFERRED_SIZE,
																55, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(cbxSapXep, javax.swing.GroupLayout.PREFERRED_SIZE,
																216, javax.swing.GroupLayout.PREFERRED_SIZE)))
										.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup().addGap(2, 2, 2)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(lblSDT, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(cbxSapXep)
										.addComponent(lblSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(lblTen, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(lblHienTen).addComponent(lblHienSDT))
								.addGap(20, 20, 20).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
										302, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap()));

		try {
			ConnectDB.getInstance().connect();
		} catch (Exception e) {
			e.printStackTrace();
		}

		hoaDon_DAO = new HoaDon_DAO();

		String[] heads = { "Mã HD", "Nhân viên bán", "Ngày thanh toán", "Tiền mua" };
		tModel = new DefaultTableModel(heads, 0);
		tList.setModel(tModel);
		jScrollPane1.setViewportView(tList);

		napDLVaoTable(sdt);

		lblHienSDT.setBorder(BorderFactory.createTitledBorder(""));
		lblHienTen.setBorder(BorderFactory.createTitledBorder(""));

		cbxSapXep.addActionListener(this);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(P_HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(P_HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(P_HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(P_HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new HoaDon("aa").setVisible(true);
//            }
//        });
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JComboBox<String> cbxSapXep;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel lblHienSDT;
	private javax.swing.JLabel lblHienTen;
	private javax.swing.JLabel lblSDT;
	private javax.swing.JLabel lblSapXep;
	private javax.swing.JLabel lblTen;
	private javax.swing.JTable tList;
	// End of variables declaration//GEN-END:variables
	private DefaultComboBoxModel cbxModol;
	private DefaultTableModel tModel;
	private HoaDon_DAO hoaDon_DAO;

	private void napDLVaoTable(String sdt) {
		ResultSet rs = hoaDon_DAO.getAllHoaDonTheoSDT(sdt);
		try {
//			lblHienTen.setText(rs.getString(1).toString());
			rs.next();
			lblHienTen.setText(rs.getString(1));
			lblHienSDT.setText(sdt);
			do {
				tModel.addRow(new Object[] { rs.getInt(2), rs.getString(3), rs.getString(4), rs.getString(5) });
			} while (rs.next());
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	private void xoaHetDLTrenTable() {
		DefaultTableModel ft = (DefaultTableModel) tList.getModel();
		ft.getDataVector().removeAllElements();
	}

	private void sapxep(String sdt, String sapTheo) {
		ResultSet rs = hoaDon_DAO.getAllHoaDonTheoSDT(sdt, sapTheo);
		try {
			xoaHetDLTrenTable();
			while (rs.next()) {
				tModel.addRow(new Object[] { rs.getInt(2), rs.getString(3), rs.getString(4), rs.getString(5) });
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Object obj = e.getSource();
		if (obj.equals(cbxSapXep)) {
			String sdt = lblHienSDT.getText();
			int i = cbxSapXep.getSelectedIndex();
			switch (i) {
			case 0: {
				sapxep(sdt, "ngayThanhToan");
				break;
			}
			case 1: {
				sapxep(sdt, "ngayThanhToan Desc");
				break;
			}
			case 2: {
				sapxep(sdt, "SUM(soLuong * giaBan)");
				break;
			}
			case 3: {
				sapxep(sdt, "SUM(soLuong * giaBan) Desc");
				break;
			}
			default:
				throw new IllegalArgumentException("Unexpected value: " + 1);
			}
		}

	}

}
