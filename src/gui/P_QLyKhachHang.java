package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import connectDB.ConnectDB;

/**
 *
 * @author Asus
 */
public class P_QLyKhachHang extends javax.swing.JPanel implements ActionListener, MouseListener {

	private int mauTinHienHanh;
	private int tongSoMauTin;
	private DefaultTableModel tModel;

	/**
	 * Creates new form P_QLyKhachHang
	 */
	public P_QLyKhachHang() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		lblTim = new javax.swing.JLabel();
		txtTim = new javax.swing.JTextField();
		btnTim = new javax.swing.JButton();
		lblDs = new javax.swing.JLabel();
		btnDau = new javax.swing.JButton();
		btnTruoc = new javax.swing.JButton();
		btnSau = new javax.swing.JButton();
		btnCuoi = new javax.swing.JButton();
		lblDem = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tList = new javax.swing.JTable();
		btnChiTiet = new javax.swing.JButton();
		btnThoat = new javax.swing.JButton();

		lblTim.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		lblTim.setText("Số điện thoại");

		btnTim.setBackground(new java.awt.Color(51, 255, 0));
		btnTim.setIcon(new ImageIcon("img/icons8-search-30.png")); // NOI18N
		btnTim.setText("Tìm kiếm");

		lblDs.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		lblDs.setText("Danh sách khách hàng");

		btnDau.setIcon(new ImageIcon("img/icons8-left2-30.png")); // NOI18N

		btnTruoc.setIcon(new ImageIcon("img/icons8-left1-30.png")); // NOI18N

		btnSau.setIcon(new ImageIcon("img/icons8-right1-30.png")); // NOI18N

		btnCuoi.setIcon(new ImageIcon("img/icons8-right2-30.png")); // NOI18N

		lblDem.setText("0/0");

		btnChiTiet.setBackground(new java.awt.Color(51, 255, 0));
		btnChiTiet.setIcon(new ImageIcon("img/icons8-contact-details-30.png")); // NOI18N
		btnChiTiet.setText("Chi tiết");

		btnThoat.setBackground(new java.awt.Color(51, 255, 0));
		btnThoat.setIcon(new ImageIcon("img/icons8-move-out-30.png")); // NOI18N
		btnThoat.setText("Thoát");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
						.createSequentialGroup().addGap(320, 320, 320).addComponent(btnDau)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnTruoc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(lblDem, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnSau)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnCuoi))
						.addGroup(layout.createSequentialGroup().addContainerGap()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(lblDs)
										.addGroup(layout.createSequentialGroup()
												.addComponent(lblTim, javax.swing.GroupLayout.PREFERRED_SIZE, 116,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 294,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(btnTim))
						.addGroup(layout.createSequentialGroup().addContainerGap()
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 868,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(btnChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 132,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 130,
												javax.swing.GroupLayout.PREFERRED_SIZE))))
				.addContainerGap(12, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(36, 36, 36)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(lblTim, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(26, 26, 26).addComponent(lblDs)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(layout.createSequentialGroup().addGap(14, 14, 14).addComponent(btnChiTiet)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(btnThoat)))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(btnCuoi).addComponent(btnDau)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(btnTruoc, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(btnSau, javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(lblDem, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.PREFERRED_SIZE, 36,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(146, Short.MAX_VALUE)));
		try {
			ConnectDB.getInstance().connect();
		} catch (Exception e) {
			e.printStackTrace();
		}

		String[] heads = { "Số điện thoại", "Tên khách hàng", "Ngày mua gần nhất", "Tổng tiền mua" };
		tModel = new DefaultTableModel(heads, 0);
		tList.setModel(tModel);
		jScrollPane1.setViewportView(tList);

		docDLVaoTable();

		mauTinHienHanh = -1;
		tongSoMauTin = tList.getRowCount();
		if (tongSoMauTin > 0) {
			mauTinHienHanh = 0; // Khởi tạo là mẫu tin đầu tiên
			capNhatSoMauTin(mauTinHienHanh);
		}
		btnChiTiet.addActionListener(this);
		btnThoat.addActionListener(this);
		btnDau.addActionListener(this);
		btnTruoc.addActionListener(this);
		btnSau.addActionListener(this);
		btnCuoi.addActionListener(this);
		btnTim.addActionListener(this);
		txtTim.addActionListener(this);

		tList.addMouseListener(this);
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnChiTiet;
	private javax.swing.JButton btnCuoi;
	private javax.swing.JButton btnDau;
	private javax.swing.JButton btnSau;
	private javax.swing.JButton btnThoat;
	private javax.swing.JButton btnTim;
	private javax.swing.JButton btnTruoc;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel lblDem;
	private javax.swing.JLabel lblDs;
	private javax.swing.JLabel lblTim;
	private javax.swing.JTable tList;
	private javax.swing.JTextField txtTim;
	// End of variables declaration//GEN-END:variables

	private void capNhatSoMauTin(int n) {
		if (n < 0) {
			lblDem.setText(0 + "/" + 0);
		} else {
			tList.setRowSelectionInterval(n, n);
			mauTinHienHanh = n;
			tongSoMauTin = tList.getRowCount();
			lblDem.setText(mauTinHienHanh + 1 + "/" + tongSoMauTin);
		}
	}

	private void docDLVaoTable() {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			String sql = "Select KH.sdtKhachHang, tenKhachHang, SUM(soLuong * giaBan)\n"
					+ "	From HoaDon HD, ChiTietHD CT, KhachHang KH\n"
					+ "	Where HD.maHD = CT.maHD AND HD.sdtKhachHang = KH.sdtKhachHang\n"
					+ "	Group by  KH.sdtKhachHang, tenKhachHang\n" + "	Order by tenKhachHang";
			Statement staement = con.createStatement();
			ResultSet resultSet = staement.executeQuery(sql);
			while (resultSet.next()) {
				tModel.addRow(
						new Object[] { resultSet.getString(1), resultSet.getString(2), "", resultSet.getDouble(3) });
			}

			sql = "Select KH.sdtKhachHang,ngayThanhToan\n" + "	From HoaDon HD, KhachHang KH\n"
					+ "	Where HD.sdtKhachHang = KH.sdtKhachHang\n" + "	Order by ngayThanhToan Desc";
			staement = con.createStatement();
			resultSet = staement.executeQuery(sql);
			int r = tList.getRowCount();
			while (resultSet.next()) {
				String sdt = resultSet.getString(1);
				Date ngayTT = resultSet.getDate(2);
				SimpleDateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
				for (int i = 0; i < r; i++) {
					if (sdt.equals(tModel.getValueAt(i, 0))) {
						if (tModel.getValueAt(i, 2).equals("")) {
							tModel.setValueAt(fmt.format(ngayTT), i, 2);
							break;
						}
						break;
					}
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void sh_Mes(String mes, JTextField txt) {
		JOptionPane.showMessageDialog(null, mes);
		if (txt == null)
			return;
		txt.requestFocus();
	}

	private void tim() {
		String sdt = txtTim.getText();
		if (sdt.trim().equals("")) {
			sh_Mes("Nhập số điện thoại khách hàng cần tìm", txtTim);
			return;
		}
		for (int i = 0; i < tongSoMauTin; i++) {
			if (sdt.equals(tModel.getValueAt(i, 0))) {
				capNhatSoMauTin(i);
				return;
			}
		}
		sh_Mes("Không có số điện thoại cần tìm", txtTim);

	}

	private void chiTietHD() {
		int r = tList.getSelectedRow();
		String sdt = tModel.getValueAt(r, 0).toString();

		P_HoaDon hd = new P_HoaDon(sdt);
		hd.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		hd.setVisible(true);

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Object obj = e.getSource();
		if (obj.equals(btnChiTiet))
			chiTietHD();
		else if (obj.equals(btnTim) || obj.equals(txtTim))
			tim();
		else if (obj.equals(btnThoat)) {
			MainGui.getPnSlider().removeAll();
			MainGui.getPnSlider().repaint();
			MainGui.getPnSlider().revalidate();
		} else if (tongSoMauTin > 0) {
			if (obj.equals(btnDau))
				mauTinHienHanh = 0;
			else if (obj.equals(btnCuoi))
				mauTinHienHanh = tongSoMauTin - 1;
			else if (obj.equals(btnSau) && mauTinHienHanh < tongSoMauTin - 1)
				mauTinHienHanh++;
			else if (obj.equals(btnTruoc) && mauTinHienHanh > 0)
				mauTinHienHanh--;
			capNhatSoMauTin(mauTinHienHanh);
		}

	}

	@Override
	public void mouseClicked(MouseEvent e) {
		int r = tList.getSelectedRow();
		mauTinHienHanh = r;
		capNhatSoMauTin(mauTinHienHanh);

	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}

}
