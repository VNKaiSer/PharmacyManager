/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import connectDB.ConnectDB;
import dao.Thuoc_DAO;
import entity.Thuoc;

/**
 *
 * @author NGOC
 */
public class pQLKho extends javax.swing.JPanel {
	private P_ThemThuoc fThemThuoc;

	/**
	 * Creates new form pnQLKho
	 */
	public pQLKho() {
		// khởi tạo kết nối đến CSDL
		try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		lblTim = new javax.swing.JLabel();
		cbxTim = new javax.swing.JComboBox<>();
		txtTim = new javax.swing.JTextField();
		btnTim = new javax.swing.JButton();
		tabQLKho = new javax.swing.JTabbedPane();
		pnThuocCanHan = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tableThuocCanHan = new javax.swing.JTable();
		pnThuocSapHetTonKho = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		tableThuocSapHetTonKho = new javax.swing.JTable();
		btnNhapThuoc = new javax.swing.JButton();

		lblTim.setText("Tìm kiếm theo tên:");

		cbxTim.setModel(new javax.swing.DefaultComboBoxModel<>(
				new String[] { "Tìm trên bảng thuốc cận hạn", "Tìm trên bảng thuốc sắp hết tồn kho" }));

		btnTim.setBackground(new java.awt.Color(0, 255, 51));
		btnTim.setText("Tìm Kiếm");
		btnTim.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTimActionPerformed(evt);
			}
		});

		try {
			dao_Thuoc = new Thuoc_DAO();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		String[] colHeader = { "Mã thuốc", "Tên thuốc", "Số lượng", "Hạn sử dụng" };
		modelThuocCanHan = new DefaultTableModel(colHeader, 0);
		// =================================
		// doc du lieu tu database SQL vao JtableThuocCanHan
		try {
			DocDuLieuDatabaseVaoTableCanHan();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// =================================

		tableThuocCanHan = new JTable(modelThuocCanHan);
		jScrollPane1.setViewportView(tableThuocCanHan);

		javax.swing.GroupLayout pnThuocCanHanLayout = new javax.swing.GroupLayout(pnThuocCanHan);
		pnThuocCanHan.setLayout(pnThuocCanHanLayout);
		pnThuocCanHanLayout
				.setHorizontalGroup(pnThuocCanHanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnThuocCanHanLayout.createSequentialGroup().addComponent(jScrollPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 996, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(0, 0, Short.MAX_VALUE)));
		pnThuocCanHanLayout
				.setVerticalGroup(pnThuocCanHanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnThuocCanHanLayout.createSequentialGroup().addComponent(jScrollPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(0, 0, Short.MAX_VALUE)));

		tabQLKho.addTab("Danh sách thuốc cận hạn", pnThuocCanHan);

		String[] colHeader1 = { "Mã thuốc", "Tên thuốc", "Số lượng" };
		modelThuocSapHetTonKho = new DefaultTableModel(colHeader1, 0);
		// =================================
		// doc du lieu tu database SQL vao JtableThuocSapHetTonKho
		try {
			DocDuLieuDatabaseVaoTableThuocSapHetTonKho();
		} catch (SQLException ex) {
			// TODO Auto-generated catch block
			ex.printStackTrace();
		}

		// =================================

		tableThuocSapHetTonKho = new JTable(modelThuocSapHetTonKho);
		jScrollPane2.setViewportView(tableThuocSapHetTonKho);

		javax.swing.GroupLayout pnThuocSapHetTonKhoLayout = new javax.swing.GroupLayout(pnThuocSapHetTonKho);
		pnThuocSapHetTonKho.setLayout(pnThuocSapHetTonKhoLayout);
		pnThuocSapHetTonKhoLayout.setHorizontalGroup(
				pnThuocSapHetTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
						jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
						996, Short.MAX_VALUE));
		pnThuocSapHetTonKhoLayout.setVerticalGroup(
				pnThuocSapHetTonKhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnThuocSapHetTonKhoLayout.createSequentialGroup().addComponent(jScrollPane2,
								javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(0, 0, Short.MAX_VALUE)));

		tabQLKho.addTab("Danh sách thuốc sắp hết tồn kho", pnThuocSapHetTonKho);

		btnNhapThuoc.setBackground(new java.awt.Color(0, 255, 51));
		btnNhapThuoc.setText("Nhập thuốc");
		btnNhapThuoc.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNhapThuocActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(tabQLKho, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(layout.createSequentialGroup().addGap(6, 6, 6)
										.addComponent(lblTim, javax.swing.GroupLayout.PREFERRED_SIZE, 126,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(cbxTim, javax.swing.GroupLayout.PREFERRED_SIZE, 207,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(18, 18, 18)
										.addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 169,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(27, 27, 27).addComponent(btnTim).addGap(32, 32, 32)
										.addComponent(btnNhapThuoc)))
						.addContainerGap(18, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lblTim, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(cbxTim, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnTim).addComponent(btnNhapThuoc))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(tabQLKho, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
						.addContainerGap()));
	}// </editor-fold>//GEN-END:initComponents

	private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimThuocActionPerformed
		String bang = cbxTim.getSelectedItem().toString();
		if (bang.equals("Tìm trên bảng thuốc cận hạn")) {
			if (txtTim.getText().length() == 0) {
				removeAllDataThuocCanHan();
				try {
					DocDuLieuDatabaseVaoTableCanHan();
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				return;
			}
			String tenThuocTim = txtTim.getText();

			ArrayList<Thuoc> list = new ArrayList<Thuoc>();
			try {
				list = dao_Thuoc.timThuocCanHan(tenThuocTim);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

			if (list.size() == 0) {
				JOptionPane.showMessageDialog(this, "Không tìm thấy thuốc này");
				return;
			}
			removeAllDataThuocCanHan();
			for (Thuoc thuoc : list) {
				modelThuocCanHan.addRow(
						new Object[] { thuoc.getMaThuoc(), thuoc.getTenThuoc(), thuoc.getSoLuong(), thuoc.getHanSD() });
			}
		} else {

			if (txtTim.getText().length() == 0) {
				removeAllDataThuocSapHetTonKho();
				try {
					DocDuLieuDatabaseVaoTableThuocSapHetTonKho();
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				return;
			}
			String tenThuocTim = txtTim.getText();

			ArrayList<Thuoc> list = new ArrayList<Thuoc>();
			try {
				list = dao_Thuoc.timThuocSapHetTonKho(tenThuocTim);
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

			if (list.size() == 0) {
				JOptionPane.showMessageDialog(this, "Không tìm thấy thuốc này");
				return;
			}
			removeAllDataThuocSapHetTonKho();
			for (Thuoc thuoc : list) {
				modelThuocSapHetTonKho
						.addRow(new Object[] { thuoc.getMaThuoc(), thuoc.getTenThuoc(), thuoc.getSoLuong() });
			}
		}
	}// GEN-LAST:event_btnTimActionPerformed

	private void btnNhapThuocActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimThuocActionPerformed
//		P_ThemThuoc themThuoc = 
		fThemThuoc = new P_ThemThuoc();
		fThemThuoc.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		fThemThuoc.setVisible(true);
	}// GEN-LAST:event_btnTimActionPerformed

	public void removeAllDataThuocSapHetTonKho() {
		DefaultTableModel df = (DefaultTableModel) tableThuocSapHetTonKho.getModel();
		df.getDataVector().removeAllElements();
	}

	public void removeAllDataThuocCanHan() {
		DefaultTableModel df = (DefaultTableModel) tableThuocCanHan.getModel();
		df.getDataVector().removeAllElements();
	}

	private void DocDuLieuDatabaseVaoTableCanHan() throws SQLException {
		listCanHan = dao_Thuoc.getThuocCanHan();

		for (Thuoc thuoc : listCanHan) {
			modelThuocCanHan.addRow(
					new Object[] { thuoc.getMaThuoc(), thuoc.getTenThuoc(), thuoc.getSoLuong(), thuoc.getHanSD() });
		}
	}

	private void DocDuLieuDatabaseVaoTableThuocSapHetTonKho() throws SQLException {
		listSapHet = dao_Thuoc.getThuocSapHet();

		for (Thuoc thuoc : listSapHet) {
			modelThuocSapHetTonKho.addRow(new Object[] { thuoc.getMaThuoc(), thuoc.getTenThuoc(), thuoc.getSoLuong() });
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnNhapThuoc;
	private javax.swing.JButton btnTim;
	private javax.swing.JComboBox<String> cbxTim;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JLabel lblTim;
	private javax.swing.JPanel pnThuocCanHan;
	private javax.swing.JPanel pnThuocSapHetTonKho;
	private javax.swing.JTabbedPane tabQLKho;
	private javax.swing.JTable tableThuocCanHan;
	private javax.swing.JTable tableThuocSapHetTonKho;
	private javax.swing.JTextField txtTim;
	private Thuoc_DAO dao_Thuoc;
	private DefaultTableModel modelThuocCanHan;
	private DefaultTableModel modelThuocSapHetTonKho;
	private ArrayList<Thuoc> listCanHan;
	private ArrayList<Thuoc> listSapHet;
	// End of variables declaration//GEN-END:variables
}
